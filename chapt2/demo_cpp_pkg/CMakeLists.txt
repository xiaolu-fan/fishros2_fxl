cmake_minimum_required(VERSION 3.8)
project(demo_cpp_pkg)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)

add_executable(first_cpp_node src/cpp_node.cpp)
# 依赖于 rclcpp头文件和库文件
# 其中“##” 表示原来注释掉
##target_include_directories(first_cpp_node PUBLIC ${rclcpp_INCLUDE_DIRS})
##target_link_libraries(first_cpp_node ${rclcpp_LIBRARIES})
# ament_cmake 可以代替前两行
ament_target_dependencies(first_cpp_node rclcpp)

# 需要安装
install(TARGETS
  first_cpp_node
  DESTINATION lib/${PROJECT_NAME}
)


if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
